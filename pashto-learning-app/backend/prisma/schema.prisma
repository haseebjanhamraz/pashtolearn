datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int       @id @default(autoincrement())
  fullName   String
  email      String    @unique
  password   String
  role       String    @default("student")
  createdAt  DateTime  @default(now())

  profile       Profile?
  progress      UserProgress[]
  exercisesDone UserExercise[]
}

model Profile {
  id        Int     @id @default(autoincrement())
  userId    Int     @unique
  age       Int?
  gender    String?
  level     String  @default("beginner")
  bio       String?
  avatarUrl String?
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Lesson {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  difficulty  String     @default("beginner")
  createdAt   DateTime   @default(now())

  exercises Exercise[]
  progress  UserProgress[]
}

model Exercise {
  id        Int      @id @default(autoincrement())
  lessonId  Int
  question  String
  answer    String
  type      String   @default("translation")
  options   String[] // multiple-choice options
  createdAt DateTime @default(now())

  lesson    Lesson        @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  attempts  UserExercise[]
}

model UserProgress {
  id          Int       @id @default(autoincrement())
  userId      Int
  lessonId    Int
  status      String    @default("in-progress")
  completedAt DateTime?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  lesson Lesson @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model UserExercise {
  id        Int      @id @default(autoincrement())
  userId    Int
  exerciseId Int
  isCorrect Boolean?
  score     Int      @default(0)
  attemptAt DateTime @default(now())

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  exercise Exercise @relation(fields: [exerciseId], references: [id], onDelete: Cascade)
}
